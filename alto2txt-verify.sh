#!/usr/bin/env bash
#
# Verification checks to run after processing newspapers with alto2txt.
#
# Call this script with two command line arguments:
# 1. the directory path containing the input data processed by alto2txt
# 2. the directory path containing the output data generated by alto2txt
#
# Both input & output directories should have identical subdirectory
# structure of the following form: title_code/YYYY/MMDD/
#
# This script checks that the directory structures are identical.
# It does not check the validity of the alto2txt text or metadata files.

input_dir=$1
output_dir=$2

if [[ ! -e $1 ]]; then
  echo "Error: Input directory $1 does not exist."
  exit
fi
if [[ ! -e $2 ]]; then
  echo "Error: Output directory $2 does not exist."
  exit
fi
echo ">>> alto2txt verification <<<"
echo "Input directory: '$input_dir'"
echo "Output directory: '$output_dir'"

# Create subdirectories to store temporary files and results.
subdir="alto2txt-verify"
if [[ -e $subdir ]]; then
  echo "Error: $subdir subdirectory already exists."
  exit
fi
mkdir $subdir

input_subdir="$subdir/input"
if [[ ! -e $input_subdir ]]; then
  mkdir $input_subdir
fi
output_subdir="$subdir/output"
if [[ ! -e $output_subdir ]]; then
  mkdir $output_subdir
fi

# Loop over the title_code/YYYY subdirectories in the input
# directory and get a list of MMDD subdirectories for each.
sep="-"
for yyyy_dir in $(find $input_dir -mindepth 2 -maxdepth 2 -not -path '*/.*' -type d); do
  yyyy="${yyyy_dir##*/}"
  title_dir="${yyyy_dir:0:(${#yyyy_dir}-5)}"
  title="${title_dir##*/}"
  txtfile="$input_subdir/$title$sep$yyyy.txt"
  (cd $input_dir && find "$title/$yyyy" -mindepth 1 -maxdepth 1 -not -path '*/.*' -type d) > $txtfile
done

# Repeat for the output subdirectories.
for yyyy_dir in $(find $output_dir -mindepth 2 -maxdepth 2 -not -path '*/.*' -type d); do
  yyyy="${yyyy_dir##*/}"
  title_dir="${yyyy_dir:0:(${#yyyy_dir}-5)}"
  title="${title_dir##*/}"
  txtfile="$output_subdir/$title$sep$yyyy.txt"
  (cd $output_dir && find "$title/$yyyy" -mindepth 1 -maxdepth 1 -not -path '*/.*' -type d) > $txtfile
done

# Compare the results.
success=true
titleyearcheck="$subdir/missing-title-years.txt"
mmddcheck="$subdir/missing-mmdd-directories"
affectedtitles="$subdir/affected-titles.txt"
first=true
first_cmp=true
for filename in $(ls $input_subdir); do
  title="${filename%$sep*}"
  if [[ ! -e $output_subdir/$filename ]]; then
    # Make a list of any .txt files in $input_subdir that aren't found in $output_subdir
    success=false
    echo "$title" >> $affectedtitles
    if [ "$first" = true ]; then
      echo "WARNING: Missing title-years detected in alto2txt output"
      echo "Missing title-years are listed in: $titleyearcheck"
      first=false
    fi
    echo "$filename" >> $titleyearcheck
  else
    # Compare .txt files that are found in both subdirs
    if (! cmp -s "$input_subdir/$filename" "$output_subdir/$filename"); then
      success=false
      echo "$title" >> $affectedtitles
      if [ "$first_cmp" = true ]; then
        echo "WARNING: Missing MMDD directories detected in alto2txt output"
        echo "Missing MMDD directories are are listed in subdirectory: $mmddcheck"
        if [[ ! -e $mmddcheck ]]; then
          mkdir $mmddcheck
        fi
        first_cmp=false
      fi
      comm -23 <(sort $input_subdir/$filename) <(sort $output_subdir/$filename) > $mmddcheck/$filename
    fi
  fi
done

if [[ -e $affectedtitles ]]; then
  sort -u $affectedtitles -o $affectedtitles
  echo ">>> All affected titles are listed in: $affectedtitles"
fi

if [ "$success" = true ]; then
  echo "SUCCESS: alto2txt verification checks passed."
fi
